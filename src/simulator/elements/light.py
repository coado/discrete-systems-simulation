from enum import Enumclass Light:    class State(Enum):        RED = 1        GREEN = 2    def __init__(            self,            id: int,            roadway: float,            duration_green: float,            duration_red: float = None,            state: State = State.RED    ):        self.state: Light.State = state        self.duration_green: float = duration_green        self.duration_red: float = duration_green \            if duration_red is None \            else duration_red        self.id = id        self.roadway = roadway        self.counter = self.duration_green \            if state == Light.State.GREEN \            else self.duration_red    def _decrement_counter(self, val=1):        self.counter -= val    def _reset_counter(self):        self.counter = self.duration_green \            if self.state == Light.State.GREEN \            else self.duration_red    def _toggle(self):        if self.state == Light.State.RED:            self.state = Light.State.GREEN        else:            self.state = Light.State.RED        self._reset_counter()    def step(self, dt):        self._decrement_counter(dt)        if self.counter == 0:            self._toggle()    def __dict__(self):        return {            "id": self.id,            "roadway": self.roadway,            "duration_green": self.duration_green,            "duration_red": self.duration_red,            "state": self.state.name,        }